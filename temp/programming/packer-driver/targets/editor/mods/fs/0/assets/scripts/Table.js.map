{"version":3,"sources":["file:///Users/fe-minhthao/Documents/test/PromiseExample/assets/scripts/Table.ts"],"names":["_decorator","Component","log","Label","Reel","ccclass","property","Table","type","onLoad","_reels","getComponentsInChildren","spin","status","string","forEach","it","_listPromise","push","startSpin","Promise","all","then","onTableStop","catch","onTableTimout","spinCompletedV1","resolve","reject","spinTimeOutV1","setTimeout","orderSpinV1","promise0","reels","promise1","promise2","promise3","promise4","spinCompletedV2","spinTimeOutV2","orderSpinv2"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, log, Label } from 'cc';\nimport { Reel } from './Reel';\nconst { ccclass, property } = _decorator;\n\n \n@ccclass('Table')\nexport class Table extends Component {\n\n    _reels = [];\n    _listPromise = [];\n\n    @property({type: Label})\n    status = null;\n\n    onLoad() {\n        this._reels = this.getComponentsInChildren(Reel);\n    }\n\n    spin() {\n        this.status.string = 'Table Spinning';\n        this._reels.forEach(\n            it => {\n                this._listPromise.push(it.startSpin())  \n            }\n        );\n\n        Promise.all(this._listPromise).then( \n            ()=>{\n                this.onTableStop();\n            }\n        ).catch(\n            ()=>{\n                this.onTableTimout();\n            }\n        )\n    }\n    \n    spinCompletedV1(){\n        this._reels.forEach(\n            it => {\n                this._listPromise.push(\n                    new Promise((resolve,reject) =>{\n                        it.startSpin(()=>{\n                            resolve(true);\n                        })\n                    })\n                )\n            }\n        );\n        Promise.all(this._listPromise).then( \n            ()=>{\n                this.onTableStop();\n            }\n        )\n    }\n\n    spinTimeOutV1(){\n        this.status.string = 'Table Spinning';\n        this._reels.forEach(\n            it => {\n                this._listPromise.push(\n                    new Promise((resolve,reject) =>{\n                        it.startSpin(()=>{\n                            resolve(true);\n                        })\n                        setTimeout(reject =>{\n                            this.onTableTimout();\n                        },10000);\n                    })\n                )\n            }\n        );\n    }\n\n    orderSpinV1(){\n        this.status.string = 'Table Order Spinning';\n        let promise0 = function(reels){\n            return new Promise((resolve,reject) =>{\n                reels[0].startSpin(()=>{\n                    resolve(true)\n                })\n            })\n        }\n        let promise1 = function(reels){\n            return new Promise((resolve,reject) =>{\n                reels[1].startSpin(()=>{\n                    resolve(true)\n                })\n            })\n        }\n        let promise2 = function(reels){\n            return new Promise((resolve,reject) =>{\n                reels[2].startSpin(()=>{\n                    resolve(true)\n                })\n            })\n        }\n        let promise3 = function(reels){\n            return new Promise((resolve,reject) =>{\n                reels[3].startSpin(()=>{\n                    resolve(true)\n                })\n            })\n        }\n        let promise4 = function(reels){\n            return new Promise((resolve,reject) =>{\n                reels[4].startSpin(()=>{\n                    resolve(true)\n                })\n            })\n        }\n\n        Promise.resolve(promise0(this._reels))\n                    .then(()=>promise1(this._reels))\n                    .then(()=>promise2(this._reels))\n                    .then(()=>promise3(this._reels))\n                    .then(()=>promise4(this._reels))\n                    .then(()=>{\n                        this.onTableStop();\n                    })\n    }\n\n   \n    spinCompletedV2(){\n        this.status.string = 'Table Spinning';\n        this._reels.forEach(\n            it => {\n                this._listPromise.push(it.startSpin())  \n            }\n        );\n\n        Promise.all(this._listPromise).then( \n            ()=>{\n                this.onTableStop();\n            }\n        )\n    }\n\n    spinTimeOutV2(){\n        this.status.string = 'Table Spinning';\n        this._reels.forEach(\n            it => {\n                this._listPromise.push(it.startSpin().catch(()=>{\n                    this.onTableTimout()\n                }))  \n            }\n        );\n    }\n\n    \n\n    orderSpinv2(){\n        this.status.string = 'Table Order Spinning';\n        Promise.resolve(this._reels[0].startSpin())\n                    .then(()=>this._reels[1].startSpin())\n                    .then(()=>this._reels[2].startSpin())\n                    .then(()=>this._reels[3].startSpin())\n                    .then(()=>this._reels[4].startSpin())\n                    .then(()=>{\n                        this.onTableStop();\n                    })\n    }\n\n    /*\n    Quest 1: Implement function spin table 5 reel cùng lúc, sử dụng promise, trả về call back khi tất cả reel cùng dừng lại\n    có thể update lại function spin, không được update Reel.ts*/\n    \n    // onTableStop() {\n    //     this.status.string = 'Table Stopped';\n    //     this._listPromise = [];\n    // }\n\n    /*\n    Quest 2: Từ quest 1, kiểm tra nếu có một trong những reel chạy quá 10s chưa dừng trigger function onTableTimeout\n    */\n\n    onTableTimout() {\n        this.status.string = 'Table Timeout';\n        this._listPromise = [];\n    }\n\n    /*\n    Quest 3: Implement function để table spin từng reel theo thứ tự 1->5 lần lượt reel này dừng đến reel tiếp theo,\n    sau khi tất cả các reel đã dừng thì trigger function onTableStop\n    */\n    onTableStop() {\n        log('onTableStop');\n        this._listPromise = [];\n    }\n\n    /*\n    Quest 4: Update Reel.ts để mỗi function startSpin là 1 promise, sau đó làm lại các quest 1,2,3\n    */\n}\n"]}